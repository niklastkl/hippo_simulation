<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="hippocampus">
    <xacro:macro name="bluerov" params="base_link_name:=base_link link_ns use_uvms_param:=False rviz_model:=False simulate_kinematics:=False">
        <xacro:if value="${use_uvms_param == True}">
            <xacro:include filename="$(find hippo_sim)/models/bluerov/urdf/bluerov_params_uvms.xacro" />
        </xacro:if>
        <xacro:unless value="${use_uvms_param == True}">
            <xacro:include filename="$(find hippo_sim)/models/bluerov/urdf/bluerov_params.xacro" />
        </xacro:unless>
        <xacro:include filename="$(find hippo_sim)/models/thruster/urdf/thruster_macro.xacro" />
        <xacro:include filename="$(find hippo_sim)/models/hippo3/urdf/mount_macro.xacro" />
        <xacro:include filename="$(find hippo_sim)/models/hippo3/urdf/clamp_macro.xacro" />
        <!-- <xacro:include filename="$(find hippo_sim)/models/range_sensor/urdf/range_sensor_macro.xacro" />
        <xacro:include filename="$(find hippo_sim)/models/camera/urdf/camera_macro.xacro" /> -->

        <xacro:property name="thruster_xy" value="${thruster_r / 2**0.5}" /><gazebo>
            <static>false</static>
        </gazebo>

        <link name="${link_ns}${base_link_name}">
            <xacro:unless value="${rviz_model == True}">
            <inertial name="base_link_inertial">
                <mass value="${base_mass}" />
                <inertia ixx="${ixx}" ixy="0.0" ixz="0.0" iyy="${iyy}" iyz="0.0" izz="${izz}" />
            </inertial>
            </xacro:unless>
            <visual name="base_link_visual">
                <geometry>
                    <mesh filename="file://$(find hippo_sim)/models/bluerov/meshes/bluerov.dae" />
                </geometry>
            </visual>
        </link>

        <xacro:unless value="${rviz_model == True}">
            <xacro:thruster parent="${link_ns}${base_link_name}" model="t200" suffix="front_starboard_horizontal" xyz="0.132 -0.10 0" rpy="0 0 ${radians(42)}" turning_direction="cw" propeller_direction="ccw" color="red" number="0"/>
            <xacro:thruster parent="${link_ns}${base_link_name}" model="t200" suffix="front_port_horizontal" xyz="0.132 -0.10 0" rpy="0 0 ${radians(-42)}" turning_direction="cw" propeller_direction="ccw" color="green" number="1" />
            <xacro:thruster parent="${link_ns}${base_link_name}" model="t200" suffix="rear_starboard_horizontal" xyz="-0.149 -0.0998 0" rpy="0 0 ${radians(133)}" turning_direction="cw" propeller_direction="cw" color="grey" number="2" />
            <xacro:thruster parent="${link_ns}${base_link_name}" model="t200" suffix="rear_port_horizontal" xyz="-0.149 0.0998 0" rpy="0 0 ${radians(-133)}" turning_direction="cw" propeller_direction="cw" color="grey" number="3" />

            <xacro:thruster parent="${link_ns}${base_link_name}" model="t200" suffix="front_starboard_vertical" xyz="0.12 -0.218 0.06" rpy="0 ${radians(-90)} 0" turning_direction="cw" propeller_direction="ccw" color="red" number="4" />
            <xacro:thruster parent="${link_ns}${base_link_name}" model="t200" suffix="front_port_vertical" xyz="0.12 0.218 0.06" rpy="0 ${radians(-90)} 0" turning_direction="ccw" propeller_direction="ccw" color="green" number="5" />
            <xacro:thruster parent="${link_ns}${base_link_name}" model="t200" suffix="rear_starboard_vertical" xyz="-0.12 -0.218 0.06" rpy="0 ${radians(-90)} 0" turning_direction="ccw" propeller_direction="ccw" color="grey" number="6" />
            <xacro:thruster parent="${link_ns}${base_link_name}" model="t200" suffix="rear_port_vertical" xyz="-0.12 0.218 0.06" rpy="0 ${radians(-90)} 0" turning_direction="cw" propeller_direction="ccw" color="grey" number="7" />

        </xacro:unless>

        <gazebo>

            <xacro:if value="${simulate_kinematics == True}">
                <plugin filename="kinematic_control" name="hippo_gz_plugins::kinematic_control">
                    <link_name>${link_ns}${base_link_name}</link_name>
                </plugin>
                <!--
                <plugin name="ignition::gazebo::systems::VelocityControl" filename="ignition-gazebo-velocity-control-system">
                    <link_name>${link_ns}${base_link_name}</link_name>
                </plugin>
                -->
            </xacro:if>
            <xacro:unless value="${simulate_kinematics == True}">
                <plugin filename="buoyancy" name="hippo_gz_plugins::buoyancy">
                    <buoyancy>
                        <link_name>${link_ns}${base_link_name}</link_name>
                        <origin>${buoyancy_origin}</origin>
                        <force_added>0</force_added>
                        <compensation>${buoyancy_compensation}</compensation> <!-- 1.01 -->
                        <height_scale_limit>0.1</height_scale_limit>
                    </buoyancy>
                </plugin>

                <plugin filename="hydrodynamics" name="hippo_gz_plugins::hydrodynamics">
                    <hydrodynamics>
                        <link>${link_ns}${base_link_name}</link>
                        <added_mass_linear>${added_mass_linear}</added_mass_linear>
                        <added_mass_angular>${added_mass_angular}</added_mass_angular>
                        <damping_linear>${damping_linear}</damping_linear>
                        <damping_angular>${damping_angular}</damping_angular>
                    </hydrodynamics>
                </plugin>
            </xacro:unless>

            <plugin filename="pose" name="hippo_gz_plugins::pose">
                <link>${link_ns}${base_link_name}</link>
                <update_rate>50.0</update_rate>
                <base_topic>ground_truth/pose</base_topic>
            </plugin>

            <plugin filename="odometry" name="hippo_gz_plugins::odometry">
                <link>${link_ns}${base_link_name}</link>
                <update_rate>50.0</update_rate>
                <base_topic>ground_truth/odometry</base_topic>
            </plugin>

            <!--
            <plugin filename="barometer" name="hippo_gz_plugins::barometer">
                <link>${link_ns}${base_link_name}</link>
                <update_rate>100.0</update_rate>
                <base_topic>pressure</base_topic>
                <atmospheric_pressure>101325.0</atmospheric_pressure>
                <water_surface_offset>0.0</water_surface_offset>
                <position>-0.15 0 0</position>
            </plugin>


            <plugin filename="range_sensor" name="hippo_gz_plugins::range_sensor">
                <link>${link_ns}${base_link_name}</link>
                <range_topic>range_topic</range_topic>
                <update_rate>20.0</update_rate>
                <model name="range_tag_00">
                    <link>${link_ns}${base_link_name}</link>
                    <id>0</id>
                </model>
                <model name="range_tag_01">
                    <link>${link_ns}${base_link_name}</link>
                    <id>1</id>
                </model>
                <model name="range_tag_02">
                    <link>${link_ns}${base_link_name}</link>
                    <id>2</id>
                </model>
                <model name="range_tag_03">
                    <link>${link_ns}${base_link_name}</link>
                    <id>3</id>
                </model>
            </plugin>
            -->
        </gazebo>
    </xacro:macro>

</robot>
